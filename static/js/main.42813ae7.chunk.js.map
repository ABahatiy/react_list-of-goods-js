{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","id","name","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortfield","setSortField","reverse","setReverse","query","handleSort","field","newReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","lengthDiff","name1","toLowerCase","name2","comparisonResult","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,GAAIC,KAAM,WAGZC,EAAsB,iBACtBC,EAAoB,SA4CnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgBJ,mBAAS,IAAlBK,EAAP,oBAEMC,EAAa,SAACC,GAClB,IAAMC,EAAaD,IAAUN,GAAaE,EAAUA,EAEpDD,EAAaK,GACbH,EAAWI,IAgBPC,EAnER,SAA0BC,EAA1B,GAAiE,IAA9BT,EAA6B,EAA7BA,UAAkBE,GAAW,EAAlBE,MAAkB,EAAXF,SAC7CQ,EAAa,YAAOD,GAsC1B,OApCIT,GACFU,EAAcC,MAAK,SAACC,EAAOC,GACzB,IAIIC,EAJEC,EAAQH,EAAMjB,KAAKqB,cACnBC,EAAQJ,EAAMlB,KAAKqB,cAErBE,EAAmB,EAGvB,OAAQlB,GACN,KAAKJ,EACHsB,EAAmBH,EAAMI,cAAcF,GACvC,MAEF,KAAKpB,EAIDqB,EADiB,KAFnBJ,EAAaC,EAAMK,OAASH,EAAMG,QAGbN,EAEAC,EAAMI,cAAcF,GAGzC,MAEF,QACE,OAAOC,EAGX,OAAOA,KAIPhB,GACFQ,EAAcR,UAGTQ,EA4BcW,CAAiB5B,EAAiB,CACrDO,YACAI,QACAF,YAGF,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WACExB,IAAcJ,GACTM,GAAWF,IAAcJ,IAElC6B,QAAS,kBAAMpB,EAAWT,IAP5B,iCAWA,wBACE2B,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WACExB,IAAcH,GACVK,GAAWF,IAAcH,IAEjC4B,QAAS,kBAAMpB,EAAWR,IAP5B,4BAWA,wBACE0B,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAatB,IAClDuB,QA/Cc,WAIlBtB,GAHGH,IAAcE,IAGLA,IAwCV,sBAOEF,GAAaE,IACb,wBACEqB,KAAK,SACLD,UAAWE,IAAG,mBAAoB,YAClCC,QA/CU,WAClBxB,EAAa,IACbE,GAAW,IA0CL,sBASJ,6BACGK,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAkB,UAAQ,OAA1B,SACGA,EAAKhC,MADCgC,EAAKjC,aCvIxBkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.42813ae7.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  { id: 1, name: 'Dumplings' },\n  { id: 2, name: 'Carrot' },\n  { id: 3, name: 'Eggs' },\n  { id: 4, name: 'Ice cream' },\n  { id: 5, name: 'Apple' },\n  { id: 6, name: 'Bread' },\n  { id: 7, name: 'Fish' },\n  { id: 8, name: 'Honey' },\n  { id: 9, name: 'Jam' },\n  { id: 10, name: 'Garlic' },\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortfield, query, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortfield) {\n    preparedGoods.sort((good1, good2) => {\n      const name1 = good1.name.toLowerCase();\n      const name2 = good2.name.toLowerCase();\n\n      let comparisonResult = 0;\n      let lengthDiff;\n\n      switch (sortfield) {\n        case SORT_FIELD_ALPHABET:\n          comparisonResult = name1.localeCompare(name2);\n          break;\n\n        case SORT_FIELD_LENGTH:\n          lengthDiff = name1.length - name2.length;\n\n          if (lengthDiff !== 0) {\n            comparisonResult = lengthDiff;\n          } else {\n            comparisonResult = name1.localeCompare(name2);\n          }\n\n          break;\n\n        default:\n          return comparisonResult;\n      }\n\n      return comparisonResult;\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortfield, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const [query] = useState('');\n\n  const handleSort = (field) => {\n    const newReverse = field === sortfield ? !reverse : reverse; // Keep the current reverse state if the same field is clicked\n\n    setSortField(field);\n    setReverse(newReverse);\n  };\n\n  const handleReverse = () => {\n    if (!sortfield && !reverse) {\n      setReverse(true);\n    } else {\n      setReverse(!reverse);\n    }\n  };\n\n  const handleReset = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortfield,\n    query,\n    reverse,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light':\n              sortfield !== SORT_FIELD_ALPHABET\n               || (reverse && sortfield !== SORT_FIELD_ALPHABET),\n          })}\n          onClick={() => handleSort(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light':\n              sortfield !== SORT_FIELD_LENGTH\n              || (reverse && sortfield !== SORT_FIELD_LENGTH),\n          })}\n          onClick={() => handleSort(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reverse })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n        {(sortfield || reverse) && (\n          <button\n            type=\"button\"\n            className={cn('button is-danger', 'is-light')}\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good.id} data-cy=\"Good\">\n            {good.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}